"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.messages = exports.ruleName = undefined;

var _utils = require("../../utils");

var _lodash = require("lodash");

var ruleName = exports.ruleName = "selector-attribute-operator-whitelist";

var messages = exports.messages = (0, _utils.ruleMessages)(ruleName, {
  rejected: function rejected(operator) {
    return "Unexpected operator \"" + operator + "\"";
  }
});

function rule(whitelistInput) {
  var whitelist = [].concat(whitelistInput);
  return function (root, result) {
    var validOptions = (0, _utils.validateOptions)(result, ruleName, {
      actual: whitelist,
      possible: [_lodash.isString]
    });
    if (!validOptions) {
      return;
    }

    root.walkRules(function (rule) {
      if (!(0, _utils.isStandardSyntaxRule)(rule)) {
        return;
      }
      if (rule.selector.indexOf("[") === -1 || rule.selector.indexOf("=") === -1) {
        return;
      }

      (0, _utils.parseSelector)(rule.selector, result, rule, function (selectorTree) {
        selectorTree.walkAttributes(function (attributeNode) {
          var operator = attributeNode.operator;

          if (!operator || operator && whitelist.indexOf(operator) !== -1) {
            return;
          }

          (0, _utils.report)({
            message: messages.rejected(operator),
            node: rule,
            index: attributeNode.attribute.length + 1,
            result: result,
            ruleName: ruleName
          });
        });
      });
    });
  };
}

rule.primaryOptionArray = true;

exports.default = rule;