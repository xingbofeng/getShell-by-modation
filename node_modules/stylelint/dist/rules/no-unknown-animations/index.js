"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.messages = exports.ruleName = undefined;

exports.default = function (actual) {
  return function (root, result) {
    var validOptions = (0, _utils.validateOptions)(result, ruleName, { actual: actual });
    if (!validOptions) {
      return;
    }

    var declaredAnimations = new Set();
    root.walkAtRules(/(-(moz|webkit)-)?keyframes/i, function (atRule) {
      declaredAnimations.add(atRule.params);
    });

    root.walkDecls(function (decl) {
      if (decl.prop.toLowerCase() === "animation" || decl.prop.toLowerCase() === "animation-name") {
        var animationNames = (0, _utils.findAnimationName)(decl.value);

        if (animationNames.length === 0) {
          return;
        }

        animationNames.forEach(function (animationNameNode) {
          if (_keywordSets.animationNameKeywords.has(animationNameNode.value.toLowerCase())) {
            return;
          }
          if (declaredAnimations.has(animationNameNode.value)) {
            return;
          }

          (0, _utils.report)({
            result: result,
            ruleName: ruleName,
            message: messages.rejected(animationNameNode.value),
            node: decl,
            index: (0, _utils.declarationValueIndex)(decl) + animationNameNode.sourceIndex
          });
        });
      }
    });
  };
};

var _utils = require("../../utils");

var _keywordSets = require("../../reference/keywordSets");

var ruleName = exports.ruleName = "no-unknown-animations";

var messages = exports.messages = (0, _utils.ruleMessages)(ruleName, {
  rejected: function rejected(animationName) {
    return "Unexpected unknown animation name \"" + animationName + "\"";
  }
});